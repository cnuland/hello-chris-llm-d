apiVersion: apps/v1
kind: Deployment
metadata:
  name: vllm-standard
  namespace: llm-d-demo
  labels:
    app: vllm-server
    variant: standard
    demo-role: baseline
spec:
  replicas: 4
  selector:
    matchLabels:
      app: vllm-server
      variant: standard
  template:
    metadata:
      labels:
        app: vllm-server
        variant: standard
        demo-role: baseline
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8000"
        prometheus.io/path: "/metrics"
    spec:
      nodeSelector:
        nvidia.com/gpu: "true"
      tolerations:
      - key: nvidia.com/gpu
        operator: Equal
        value: "true"
        effect: NoSchedule
      containers:
      - name: vllm
        image: vllm/vllm-openai:latest
        ports:
        - containerPort: 8000
          name: http
        env:
        - name: MODEL_NAME
          value: "meta-llama/Llama-3.1-8B-Instruct"
        - name: TENSOR_PARALLEL_SIZE
          value: "1"
        - name: MAX_MODEL_LEN
          value: "8192"
        - name: ENABLE_PREFIX_CACHING
          value: "true"
        - name: GPU_MEMORY_UTILIZATION
          value: "0.8"
        - name: TRUST_REMOTE_CODE
          value: "true"
        - name: SERVED_MODEL_NAME
          value: "llama-3.1-8b"
        command:
        - python
        - -m
        - vllm.entrypoints.openai.api_server
        args:
        - --model=$(MODEL_NAME)
        - --served-model-name=$(SERVED_MODEL_NAME)
        - --host=0.0.0.0
        - --port=8000
        - --tensor-parallel-size=$(TENSOR_PARALLEL_SIZE)
        - --max-model-len=$(MAX_MODEL_LEN)
        - --enable-prefix-caching
        - --gpu-memory-utilization=$(GPU_MEMORY_UTILIZATION)
        - --trust-remote-code
        - --enable-auto-tool-choice
        - --tool-call-parser=hermes
        volumeMounts:
        - name: hf-cache
          mountPath: /root/.cache/huggingface
        - name: model-cache
          mountPath: /tmp/model_cache
        resources:
          requests:
            memory: "16Gi"
            cpu: "4"
            nvidia.com/gpu: 1
          limits:
            memory: "32Gi"
            cpu: "8"
            nvidia.com/gpu: 1
        livenessProbe:
          httpGet:
            path: /health
            port: 8000
          initialDelaySeconds: 120
          periodSeconds: 30
          timeoutSeconds: 10
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /health
            port: 8000
          initialDelaySeconds: 60
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
      volumes:
      - name: hf-cache
        emptyDir:
          sizeLimit: 50Gi
      - name: model-cache
        emptyDir:
          sizeLimit: 20Gi
      imagePullSecrets:
      - name: hf-secret
---
apiVersion: v1
kind: Service
metadata:
  name: vllm-standard
  namespace: llm-d-demo
  labels:
    app: vllm-server
    variant: standard
  annotations:
    prometheus.io/scrape: "true"
    prometheus.io/port: "8000"
    prometheus.io/path: "/metrics"
spec:
  selector:
    app: vllm-server
    variant: standard
  ports:
  - name: http
    port: 8000
    targetPort: 8000
    protocol: TCP
  type: ClusterIP
---
apiVersion: v1
kind: Secret
metadata:
  name: hf-secret
  namespace: llm-d-demo
type: kubernetes.io/dockerconfigjson
data:
  .dockerconfigjson: ewogICJhdXRocyI6IHsKICAgICJodWdnaW5nZmFjZS5jbyI6IHsKICAgICAgInVzZXJuYW1lIjogInRva2VuIiwKICAgICAgInBhc3N3b3JkIjogIllPVVJfSEZfVE9LRU4iCiAgICB9CiAgfQp9
---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: vllm-standard-hpa
  namespace: llm-d-demo
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: vllm-standard
  minReplicas: 2
  maxReplicas: 8
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80
  - type: Pods
    pods:
      metric:
        name: inference_queue_length
      target:
        type: AverageValue
        averageValue: "10"
  behavior:
    scaleUp:
      stabilizationWindowSeconds: 300
      policies:
      - type: Percent
        value: 50
        periodSeconds: 60
    scaleDown:
      stabilizationWindowSeconds: 600
      policies:
      - type: Percent
        value: 25
        periodSeconds: 180 